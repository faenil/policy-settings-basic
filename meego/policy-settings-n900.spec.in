%define _enable_debug_packages 0
%define _unpackaged_files_terminate_build 0

Summary: Precompiled basic MeeGo policy settings for the N900
Name: policy-settings-n900
Version: ##__VERSION__##
Release: 1
License: GPLv2
Group: System Environment/Configuration
URL: http://127.0.0.1
Source0: %{name}-%{version}.tar.gz
BuildArch: noarch
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root
BuildRequires: libdres-utils
BuildRequires: swi-prolog, swi-prolog-lib
BuildRequires: libprolog, prolog-extensions
Requires: swi-prolog, swi-prolog-lib-core, libprolog, prolog-extensions
#Requires: ohm, ohm-plugins-misc, ohm-plugin-resolver, ohm-plugin-ruleengine
#Requires: pulseaudio-policy-enforcement

%description
Precompiled basic MeeGo policy settings for the N900.

%package text
Summary: Basic MeeGo policy settings sources for the N900
Group: System Environment/Configuration
Provides: policy-settings
Requires: swi-prolog, swi-prolog-lib-core, swi-prolog-lib
Requires: libprolog, prolog-extensions
#Requires: ohm, ohm-plugins-misc, ohm-plugin-resolver, ohm-plugin-ruleengine
#Requires: pulseaudio-policy-enforcement

%description text
Basic MeeGo policy settings sources for the N900.

%prep
%setup -q

%build
./autogen.sh
%configure
make

%install
[ "$RPM_BUILD_ROOT" != "/" ] && rm -rf $RPM_BUILD_ROOT
make DESTDIR=$RPM_BUILD_ROOT install

%clean
[ "$RPM_BUILD_ROOT" != "/" ] && rm -rf $RPM_BUILD_ROOT

%post
ruleset=basic
ln -sf %{_datadir}/policy/rules/$ruleset %{_datadir}/policy/rules/current
ln -sf %{_datadir}/policy/etc/$ruleset %{_datadir}/policy/etc/current
for f in `find %{_datadir}/policy/etc/$ruleset/ohm -type f`; do
    lnk="/etc/${f#%{_datadir}/policy/etc/$ruleset/}"
    if test -e ${lnk%/*}; then
        ln -s $f $lnk
    else
        echo "WARNING: Cannot link $f to $lnk..."
	exit 1
    fi
done

%post text
ruleset=basic
ln -sf %{_datadir}/policy/rules/$ruleset %{_datadir}/policy/rules/current
ln -sf %{_datadir}/policy/etc/$ruleset %{_datadir}/policy/etc/current
for f in `find %{_datadir}/policy/etc/$ruleset/ohm -type f`; do
    lnk="/etc/${f#%{_datadir}/policy/etc/$ruleset/}"
    if test -e ${lnk%/*}; then
        ln -s $f $lnk
    else
        echo "WARNING: Cannot link $f to $lnk..."
	exit 1
    fi
done

%preun
# XXX ideally we should check if these point to our files/directories...
ruleset=basic
rm -f %{_datadir}/policy/rules/current
rm -f %{_datadir}/policy/etc/current
for f in `find %{_datadir}/policy/etc/$ruleset/ohm -type f`; do
    lnk="/etc/${f#%{_datadir}/policy/etc/$ruleset/}"
    if test -h ${lnk}; then
        rm -f $lnk
    fi
done

%preun text
# XXX ideally we should check if these point to our files/directories...
ruleset=basic
rm -f %{_datadir}/policy/rules/current
rm -f %{_datadir}/policy/etc/current
for f in `find %{_datadir}/policy/etc/$ruleset/ohm -type f`; do
    lnk="/etc/${f#%{_datadir}/policy/etc/$ruleset/}"
    if test -h ${lnk}; then
        # should check if it points to our file...
        rm -f $lnk
    fi
done

%postun
ruleset=basic
rm -fr %{_datadir}/policy/rules/$ruleset
rm -fr %{_datadir}/policy/etc/$ruleset

%postun text
ruleset=basic
rm -fr %{_datadir}/policy/rules/$ruleset
rm -fr %{_datadir}/policy/etc/$ruleset

%files
%defattr(-,root,root,-)
%{_datadir}/policy/rules/basic/*.plc
%{_datadir}/policy/rules/basic/*.dresc
%{_datadir}/policy/etc/basic/*.conf
%{_datadir}/policy/etc/basic/ohm
%{_datadir}/policy/etc/basic/pulse

%files text
%defattr(-,root,root,-)
%{_datadir}/policy/rules/basic/*.pl
%{_datadir}/policy/rules/basic/*.dres
%{_datadir}/policy/etc/basic/*.conf
%{_datadir}/policy/etc/basic/ohm
%{_datadir}/policy/etc/basic/pulse

%changelog
* Sun Dec 12 2010 Krisztian Litkey <krisztian.litkey@nokia.com> - 
- Initial build.
